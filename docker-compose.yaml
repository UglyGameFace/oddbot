# docker-compose.yaml - Run the complete application stack (Corrected & Final)
version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  parlay-bot:
    build:
      context: .
    image: parlay-bot-app:latest
    command: npm start
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - PORT=8080
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/liveness"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  worker-odds:
    image: parlay-bot-app:latest
    command: npm run worker:odds
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  worker-notifications:
    image: parlay-bot-app:latest
    command: npm run worker:notifications
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data:
