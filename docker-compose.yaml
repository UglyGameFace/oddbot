# docker-compose.yaml - Run the complete application stack
version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  parlay-bot:
    build: .
    command: npm start
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health/liveness"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  worker-odds:
    build: .
    command: npm run worker:odds
    env_file:
      - .env
    depends_on:
      - redis
      - parlay-bot

  worker-notifications:
    build: .
    command: npm run worker:notifications
    env_file:
      - .env
    depends_on:
      - redis
      - parlay-bot

volumes:
  redis_data:
